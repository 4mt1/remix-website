import { json } from "@remix-run/node";
import { useLoaderData } from "@remix-run/react";
import type {
  HeadersFunction,
  LinksFunction,
  LoaderFunction,
} from "@remix-run/node";
import cx from "clsx";
import {
  secondaryButtonLinkClass,
  outlineSecondaryButtonLinkClass,
} from "~/components/buttons";
import indexStyles from "~/styles/index.css";
import { Fragment } from "react";
import type { Sponsor, Speaker } from "~/utils/conf";
import { getSpeakers, getSponsors } from "~/utils/conf.server";
import { Link } from "~/components/link";
import { CACHE_CONTROL } from "~/utils/http.server";

export function meta() {
  let url = "https://remix.run/conf";
  let title = "Remix Conf â€” May 2023";
  let image = "https://remix.run/conf-images/2023/og_image.jpg";
  let description =
    "Join us in Salt Lake City, UT for our innaugural conference. Featuring distinguished speakers, workshops, and lots of fun in between. See you there!";
  return {
    title,
    description,
    "og:url": url,
    "og:title": title,
    "og:description": description,
    "og:image": image,
    "twitter:card": "summary_large_image",
    "twitter:creator": "@remix_run",
    "twitter:site": "@remix_run",
    "twitter:title": title,
    "twitter:description": description,
    "twitter:image": image,
  };
}

export let links: LinksFunction = () => {
  return [{ rel: "stylesheet", href: indexStyles }];
};

type LoaderData = {
  speakers: Array<Omit<Speaker, "bio">>;
  sponsors: {
    premier: Sponsor | undefined;
    gold: Array<Sponsor>;
    silver: Array<Sponsor>;
    community: Array<Sponsor>;
  };
};

export const loader: LoaderFunction = async () => {
  const speakersOrdered = await getSpeakers(2023);
  const speakersShuffled = speakersOrdered
    // save a bit of data by not sending along the bio to the home page
    .map(
      ({
        // @ts-ignore
        bio,
        ...s
      }) => s
    )
    .sort(() => Math.random() - 0.5);

  const allSponsors = await getSponsors(2023);
  const sponsors = {
    premier: allSponsors.find((s) => s.level === "premier"),
    gold: allSponsors
      .filter((s) => s.level === "gold")
      .sort(() => Math.random() - 0.5),
    silver: allSponsors
      .filter((s) => s.level === "silver")
      .sort(() => Math.random() - 0.5),
    community: allSponsors
      .filter((s) => s.level === "community")
      .sort(() => Math.random() - 0.5),
  };
  return json<LoaderData>(
    { speakers: speakersShuffled, sponsors },
    { headers: { "Cache-Control": CACHE_CONTROL } }
  );
};

export const headers: HeadersFunction = () => {
  return {
    "Cache-Control": CACHE_CONTROL,
  };
};

export default function ConfIndex() {
  return (
    <div x-comp="Index" className="w-full overflow-x-hidden">
      <Hero />
      <EarlySponsors />
      {/* <Speakers /> */}
      {/* <Workshops /> */}
      {/* <Sponsors /> */}
    </div>
  );
}

function Hero() {
  return (
    <Fragment>
      <section className="__hero bg-black relative pb-10 pt-40 sm:pb-16 sm:pt-48 md:pb-24 md:pt-52 lg:pb-32 lg:pt-64 w-full">
        <div className="__fx-wrapper">
          <div className="__fx-lights"></div>
          <div className="__fx-twinkle"></div>
          <div className="__fx-colors"></div>
        </div>
        <div className="container relative">
          <div className="flex flex-col xl:flex-row-reverse items-center xl:justify-between">
            <LogoRemixHero
              role="img"
              aria-label="Remix Conf 2023"
              focusable="false"
              className="flex-auto w-full h-auto max-w-md md:max-w-lg xl:max-w-xl mx-auto xl:mx-0"
            />
            <div className="max-w-xl mx-auto md:mx-0">
              <h1 className="font-display text-m-j md:text-d-j">
                <div className="text-white">May, 2023 </div>
                <div className="text-yellow-brand">Salt Lake City</div>
              </h1>
              <div className="h-6" />
              <p className="space-y-4 text-m-p-lg lg:text-d-p-lg text-white">
                Remix is a full stack web framework that lets you focus on the
                user interface and work back through web standards to deliver a
                fast, slick, and resilient user experience.
              </p>
              <div className="h-9" />
              <div className="flex flex-col gap-4 md:flex-row items-center">
                <a
                  href="#"
                  className={`${secondaryButtonLinkClass} w-full md:w-auto`}
                >
                  Become a Sponsor
                </a>
                <a
                  href="https://ti.to/remix-conf/2023"
                  className={`${outlineSecondaryButtonLinkClass} w-full md:w-auto`}
                >
                  Buy Tickets
                </a>
              </div>
            </div>
          </div>
        </div>
      </section>
    </Fragment>
  );
}

function EarlySponsors() {
  return (
    <section className="relative my-10 sm:my-14 lg:my-24 xl:my-28">
      <div className="container">
        <div className="max-w-xl xl:max-w-none mx-auto xl:mx-0">
          <h2 className="font-display text-m-j md:text-d-j mb-4 md:mb-8 text-blue-brand">
            Sponsors
          </h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-3 gap-8">
            <SponsorGridCell className="bg-gray-900">
              <a
                className="flex w-full p-4 md:p-8"
                href="https://www.storyblok.com/"
                aria-label="Storyblok"
              >
                <LogoStoryblok aria-hidden className="block w-full h-auto" />
              </a>
            </SponsorGridCell>
            <SponsorGridCell className="bg-gray-900">
              <a
                className="flex w-full p-4 md:p-8"
                href="https://www.netlify.com/"
                aria-label="Netlify"
              >
                <LogoNetlify aria-hidden className="block w-full h-auto" />
              </a>
            </SponsorGridCell>
            <SponsorGridCell className="bg-blue-brand text-white font-bold text-m-h3 xl:text-d-h3">
              <div>
                Your Company Here?
                <br />
                <Link to="sponsor" className="underline">
                  Let's Talk.
                </Link>
              </div>
            </SponsorGridCell>
          </div>
        </div>
      </div>
    </section>
  );
}

function LogoStoryblok(props: React.ComponentPropsWithoutRef<"svg">) {
  return (
    <svg
      viewBox="0 0 158 33"
      width="158"
      height="33"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path fill="#FFF" d="M4 4h20v20H4z"></path>
      <g fillRule="nonzero">
        <path
          d="M45.404 23.093a10.75 10.75 0 01-3.354-.522 7.649 7.649 0 01-2.8-1.63l1.465-2.478a13.3 13.3 0 002.377 1.304 5.499 5.499 0 002.214.457c.52 0 .944-.098 1.237-.294.293-.163.423-.456.423-.815 0-.326-.162-.652-.553-.848a8.456 8.456 0 00-1.921-.652l-2.28-.75c-.618-.261-1.106-.522-1.497-.815a2.4 2.4 0 01-.846-.979 3.2 3.2 0 01-.26-1.304 4.242 4.242 0 011.53-3.326c.455-.391 1.041-.685 1.692-.913.652-.228 1.368-.326 2.117-.326 1.01 0 1.953.13 2.832.391.88.294 1.726.783 2.54 1.5l-1.595 2.446a10.838 10.838 0 00-2.019-1.141 4.35 4.35 0 00-1.758-.36c-.423 0-.814.066-1.107.262-.326.163-.456.456-.456.848 0 .39.163.652.488.847.326.196.977.392 1.856.62.816.206 1.62.456 2.41.75.65.26 1.172.554 1.595.848.8.59 1.243 1.55 1.172 2.543 0 1.337-.488 2.38-1.498 3.163-.976.783-2.279 1.174-4.004 1.174zm16.116-.946c-.553.229-1.204.457-1.92.653-.717.195-1.433.326-2.182.326-.521 0-.977-.065-1.433-.196a3.254 3.254 0 01-1.204-.652c-.326-.261-.586-.652-.782-1.076a4.198 4.198 0 01-.325-1.663v-7.011H51.98V9.463h1.725V5.19h4.037v4.24h2.735v3.097h-2.735v5.609c0 .424.098.75.326.978.228.163.521.26.847.26.325 0 .65-.032.944-.162.325-.098.618-.196.846-.326l.782 3.26h.032zm7.619.946a7.804 7.804 0 01-3.028-.554 6.387 6.387 0 01-3.647-3.75 7.51 7.51 0 010-5.283 6.387 6.387 0 013.647-3.75c.88-.358 1.888-.554 3.028-.554a6.832 6.832 0 015.275 2.12c.618.619 1.074 1.369 1.4 2.184a7.315 7.315 0 010 5.315A6.42 6.42 0 0172.2 22.54a7.804 7.804 0 01-3.061.554zm-2.93-6.913c0 1.044.26 1.891.814 2.511.586.652 1.302.978 2.149.978a2.668 2.668 0 002.116-.978c.26-.326.456-.652.619-1.109.162-.424.227-.913.227-1.402 0-1.076-.293-1.924-.846-2.543a2.668 2.668 0 00-2.116-.979 2.766 2.766 0 00-2.117.979c-.26.326-.488.652-.65 1.108a4.245 4.245 0 00-.196 1.435zm20.61-3.228c-.977 0-1.889.163-2.703.489a3.257 3.257 0 00-1.726 1.37v8.054h-4.07V9.463h3.745v2.674c.456-.913 1.042-1.63 1.79-2.12.717-.522 1.466-.783 2.28-.815h.423l.26.032v3.718zm1.79 11.902a5.918 5.918 0 001.758.326c.489 0 .88-.163 1.173-.49.26-.325.488-.977.716-1.825l-5.08-13.402h4.2l3.094 9.88 2.702-9.88h3.81L95.87 25.017a5.306 5.306 0 01-6.186 3.652 5.002 5.002 0 01-1.075-.326v-3.489zm22.01-1.76c-1.01 0-1.92-.197-2.67-.653a4.724 4.724 0 01-1.823-1.794v2.218h-3.549V4.213h4.102v7.435a4.85 4.85 0 014.363-2.446c.847 0 1.628.163 2.345.554.716.326 1.302.848 1.855 1.468a8.554 8.554 0 011.173 7.695 7.19 7.19 0 01-1.335 2.218 5.987 5.987 0 01-4.461 1.956zm-1.14-3.425a3.093 3.093 0 002.93-2.087 4.048 4.048 0 00-.618-3.88 2.636 2.636 0 00-2.149-1.044c-.618 0-1.204.229-1.758.653a4.667 4.667 0 00-1.237 1.695v2.805a3.19 3.19 0 002.865 1.826l-.033.032zm9.377-15.456h4.07V18.07c0 1.044.424 1.533 1.303 1.533.464.001.923-.11 1.335-.326l.553 3.033a9.3 9.3 0 01-3.614.782c-1.172 0-2.084-.326-2.702-.913-.652-.652-.977-1.5-.977-2.674V4.213h.032zm14.945 18.88a7.804 7.804 0 01-3.028-.554 6.42 6.42 0 01-3.68-3.75 7.509 7.509 0 011.368-7.5 7.015 7.015 0 012.28-1.533c.878-.358 1.888-.554 3.027-.554a6.832 6.832 0 015.275 2.12c.651.619 1.074 1.369 1.4 2.184a7.346 7.346 0 01-1.368 7.5 6.25 6.25 0 01-2.279 1.533 7.804 7.804 0 01-3.028.554h.033zm-2.963-6.913c0 1.044.26 1.891.814 2.511.586.652 1.302.978 2.149.978a2.7 2.7 0 002.116-.978c.26-.326.456-.652.619-1.109.163-.424.228-.913.228-1.402 0-1.076-.293-1.924-.847-2.543a2.668 2.668 0 00-2.116-.979 2.766 2.766 0 00-2.116.979c-.26.326-.489.652-.652 1.108-.162.457-.195.913-.195 1.435zm21.13 6.685l-3.483-5.413-1.433 1.5v3.913h-4.07V4.213h4.07v10.793l4.526-5.543h4.33l-4.818 5.771 5.21 7.63h-4.331z"
          fill="#FFF"
        ></path>
        <g fill="#0AB3AF">
          <path d="M16.278 15.213H9.813v3.042h6.31c.373 0 .715-.152.995-.395.248-.244.404-.609.404-1.065a1.798 1.798 0 00-.342-1.095c-.249-.305-.529-.487-.902-.487zm.218-3.682c.28-.182.404-.578.404-1.095 0-.456-.124-.791-.342-1.004a1.258 1.258 0 00-.808-.304H9.812v2.738h5.814c.31 0 .621-.152.87-.335z"></path>
          <path d="M26.777 0H1.452C.645 0 0 .643 0 1.415v25.28c0 .773.645 1.255 1.42 1.255h3.742V33l4.646-5.018h16.97c.774 0 1.258-.482 1.258-1.286V1.447c0-.772-.484-1.415-1.29-1.415L26.776 0zM22.52 20.488a3.893 3.893 0 01-1.387 1.416c-.613.385-1.29.74-2.065.9-.774.193-1.613.354-2.484.354H5.162V5.146h12.97c.645 0 1.193.129 1.71.418.483.258.935.611 1.29 1.03a4.815 4.815 0 011.097 3.12c0 .836-.226 1.64-.646 2.412a4.028 4.028 0 01-1.935 1.737c1.032.289 1.839.804 2.451 1.543.581.772.872 1.77.872 3.024 0 .804-.162 1.48-.484 2.058h.032z"></path>
        </g>
      </g>
    </svg>
  );
}

function LogoNetlify(props: React.ComponentPropsWithoutRef<"svg">) {
  return (
    <svg
      viewBox="0 0 148 40"
      role="img"
      aria-label="Netlify"
      focusable="false"
      {...props}
    >
      <title>Netlify logotype</title>
      <defs>
        <radialGradient
          id="netlifyGradient"
          cx="0%"
          cy="0%"
          r="100%"
          fx="0%"
          fy="0%"
        >
          <stop stopColor="#20C6B7" offset="0%"></stop>
          <stop stopColor="#4D9ABF" offset="100%"></stop>
        </radialGradient>
      </defs>
      <path
        viewBox="0 0 40 40"
        id="netlifyGem"
        fill="url(#netlifyGradient)"
        d="M28.58865,14.135028 C28.58395,14.132628 28.57945,14.130928 28.57505,14.129228 C28.56675,14.126028 28.55905,14.123128 28.55185,14.116228 C28.52855,14.094228 28.51935,14.054728 28.52445,14.023128 L29.29675,9.296708 L32.92245,12.922528 L29.15235,14.526628 C29.14195,14.531128 29.13065,14.533428 29.11935,14.533428 C29.11195,14.533428 29.10775,14.533428 29.10405,14.532128 C29.09895,14.530328 29.09475,14.526128 29.08485,14.516428 C28.95165,14.368228 28.78625,14.236028 28.58865,14.135028 Z M33.84685,13.846928 L37.72315,17.723128 C38.52845,18.528528 38.93115,18.931228 39.07845,19.396928 C39.10025,19.465728 39.11815,19.535328 39.13225,19.605628 L29.86905,15.683328 C29.86435,15.681328 29.85945,15.679328 29.85445,15.677328 C29.81695,15.662128 29.77405,15.644828 29.77405,15.606528 C29.77405,15.568928 29.81825,15.550828 29.85505,15.535628 C29.85905,15.534028 29.86295,15.532428 29.86665,15.530928 L33.84685,13.846928 Z M38.97385,20.850028 C38.77395,21.226028 38.38415,21.615828 37.72315,22.276928 L33.35425,26.645728 L27.70205,25.468628 C27.69265,25.466628 27.68245,25.465028 27.67215,25.463328 C27.62275,25.455228 27.56865,25.446328 27.56865,25.400528 C27.51695,24.923528 27.29295,24.497728 26.91385,24.208228 C26.89075,24.185328 26.89725,24.149128 26.90325,24.115828 C26.90405,24.111128 26.90485,24.106528 26.90565,24.102028 L27.96935,17.576028 C27.97045,17.569128 27.97145,17.561828 27.97255,17.554428 C27.97945,17.504628 27.98765,17.446128 28.03385,17.446128 C28.50925,17.379028 28.91765,17.146528 29.19325,16.781228 C29.20155,16.770328 29.20805,16.760028 29.22035,16.754128 C29.25185,16.739228 29.29095,16.754828 29.32305,16.768328 L38.97385,20.850028 Z M32.34875,27.651228 L25.16275,34.837228 L26.39375,27.276728 C26.39425,27.273228 26.39475,27.269728 26.39515,27.266228 C26.39645,27.256728 26.39765,27.247328 26.40115,27.238228 C26.41075,27.213928 26.43715,27.203528 26.46215,27.193628 C26.46615,27.192028 26.47005,27.190528 26.47385,27.188928 C26.74695,27.075328 26.97865,26.895028 27.16905,26.672128 C27.19325,26.643828 27.22225,26.617428 27.25905,26.611128 C27.26725,26.609728 27.27975,26.610628 27.28795,26.612328 L32.34875,27.651228 Z M23.64205,36.358028 L22.83175,37.168328 L13.87735,24.226028 C13.87405,24.221328 13.87055,24.216628 13.86695,24.211928 C13.85285,24.193428 13.83845,24.174328 13.84055,24.151928 C13.84195,24.135728 13.85225,24.122628 13.86255,24.109628 C13.86585,24.105428 13.86925,24.101128 13.87225,24.096828 C13.89965,24.057628 13.92295,24.017628 13.94845,23.973728 C13.95505,23.962428 13.96175,23.950828 13.96875,23.938928 L13.97075,23.935628 C13.98465,23.911928 13.99785,23.889428 14.02215,23.876428 C14.04325,23.865228 14.07175,23.869928 14.09515,23.874828 L24.01635,25.920828 C24.04105,25.925928 24.07445,25.936328 24.09245,25.954028 C24.10525,25.966828 24.10795,25.980728 24.11095,25.996528 C24.11205,26.002828 24.11335,26.009428 24.11525,26.016228 C24.26085,26.528828 24.63425,26.972228 25.13915,27.171928 C25.16715,27.185728 25.15475,27.217328 25.14175,27.250428 C25.13575,27.265628 25.12965,27.281128 25.12725,27.295328 C25.00245,28.055728 23.92985,34.593128 23.64205,36.358028 Z M21.94995,38.049128 C21.35315,38.640128 21.00115,38.952628 20.60305,39.078528 C20.21065,39.202628 19.78935,39.202628 19.39695,39.078528 C18.93115,38.931228 18.52845,38.528528 17.72315,37.723128 L8.73041,28.730428 L11.07885,25.086928 C11.09045,25.068928 11.10095,25.052628 11.11845,25.040228 C11.14395,25.022128 11.18035,25.030828 11.21015,25.040128 C11.45185,25.114728 11.67995,25.145028 11.92335,25.145028 C12.23745,25.145028 12.53565,25.082328 12.84835,24.956928 C12.87475,24.946328 12.90215,24.940028 12.92335,24.958828 C12.93345,24.967828 12.94385,24.980228 12.95145,24.991328 L21.94995,38.049128 Z M7.86325,27.863228 L5.79956,25.799528 L9.8744,24.061628 C9.88486,24.057128 9.89611,24.054828 9.90748,24.054828 C9.94124,24.054828 9.96101,24.088628 9.97946,24.120128 C9.984,24.127928 9.98846,24.135528 9.99303,24.142428 C10.03191,24.201528 10.07078,24.253028 10.10966,24.304328 C10.11272,24.308328 10.11963,24.316028 10.12248,24.320128 C10.13403,24.337128 10.12557,24.353628 10.11446,24.370828 L7.86325,27.863228 Z M4.88716,24.887128 L2.27688,22.276928 C1.83293,21.832928 1.511345,21.511328 1.287443,21.234128 L9.22264,22.879628 C9.23201,22.881528 9.24212,22.883228 9.25244,22.884928 C9.30189,22.892928 9.35601,22.901828 9.35601,22.947628 C9.35601,22.997328 9.2973,23.020628 9.24713,23.040428 C9.23912,23.043628 9.23133,23.046728 9.22403,23.049828 L4.88716,24.887128 Z M0.83135,19.891928 C0.84039822,19.724728 0.8704545,19.558428 0.9215188,19.396928 C1.068812,18.931228 1.471502,18.528528 2.27688,17.723128 L5.61789,14.382128 C6.16841,15.190128 9.80487,20.443328 10.22934,21.051328 C10.23348,21.057228 10.238,21.063328 10.24261,21.069528 C10.26971,21.106128 10.29957,21.146428 10.26932,21.176328 C10.12296,21.337028 9.9766,21.512928 9.8737,21.704128 C9.86155,21.726628 9.84599,21.752228 9.8242,21.765728 C9.81094,21.773928 9.79737,21.771028 9.78225,21.767828 L9.77999,21.767428 L0.83135,19.891928 Z M6.51068,13.489328 L11.00195,8.998018 C11.42405,9.182688 12.96045,9.831958 14.33375,10.412338 C15.37465,10.852228 16.32225,11.252728 16.61955,11.381128 C16.64945,11.394028 16.67675,11.405828 16.68995,11.435628 C16.69785,11.453528 16.69395,11.477128 16.68995,11.496328 C16.65965,11.640028 16.64455,11.783728 16.64455,11.927428 C16.64455,12.455428 16.85135,12.949428 17.21315,13.324128 C17.24295,13.353528 17.21285,13.396628 17.18655,13.434428 C17.18165,13.441528 17.17685,13.448428 17.17265,13.455028 L12.61335,20.518228 C12.60095,20.537428 12.58965,20.555028 12.57045,20.567528 C12.54625,20.583328 12.51235,20.576228 12.48435,20.569128 C12.30665,20.524128 12.11625,20.494928 11.94065,20.494928 C11.77745,20.494928 11.59885,20.525528 11.41935,20.557628 L11.41775,20.557928 C11.39835,20.561428 11.38035,20.564728 11.36425,20.553028 C11.34665,20.540328 11.33135,20.519928 11.31905,20.502028 L6.51068,13.489328 Z M11.90875,8.091218 L17.72315,2.276888 C18.52845,1.471504 18.93115,1.068812 19.39695,0.9215196 C19.78935,0.7973975 20.21065,0.7973975 20.60305,0.9215197 C21.06885,1.068812 21.47155,1.471503 22.27685,2.276888 L23.53685,3.536838 L19.40185,9.941378 C19.38995,9.959798 19.37905,9.976588 19.36095,9.989048 C19.33595,10.006238 19.30055,9.998138 19.27135,9.989838 C19.06205,9.930318 18.85265,9.900558 18.64325,9.900558 C18.17805,9.900558 17.71285,10.070888 17.35105,10.360448 C17.32425,10.386938 17.28415,10.370608 17.24965,10.355608 C16.70965,10.121178 12.50965,8.345268 11.90875,8.091218 Z M24.41455,4.414568 L28.23345,8.233478 L27.31395,13.930628 C27.31325,13.935228 27.31265,13.940528 27.31215,13.946028 C27.31075,13.959128 27.30915,13.973528 27.30455,13.983828 C27.29555,14.003828 27.27585,14.008328 27.25485,14.013128 C27.24775,14.014728 27.24045,14.016428 27.23335,14.018728 C27.03995,14.081928 26.86055,14.170928 26.70645,14.285928 C26.69925,14.291328 26.69325,14.297628 26.68745,14.303728 C26.67585,14.316028 26.66495,14.327428 26.64705,14.328528 C26.63525,14.329228 26.61535,14.326628 26.60445,14.321928 L20.78625,11.849828 C20.78245,11.848228 20.77855,11.846628 20.77455,11.844928 C20.73775,11.829828 20.69365,11.811628 20.69365,11.774028 C20.66225,11.463028 20.55895,11.152128 20.39705,10.880028 C20.39295,10.873228 20.38875,10.866328 20.38435,10.859328 C20.35585,10.813428 20.32545,10.764668 20.34905,10.718018 L24.41455,4.414568 Z M20.48325,13.020928 L25.93675,15.331328 C25.96795,15.344528 25.99985,15.358028 26.01255,15.389428 C26.01925,15.406228 26.01605,15.428128 26.01265,15.445728 C25.99735,15.525228 25.98345,15.617028 25.98345,15.708728 L25.98345,15.862028 C25.98345,15.899528 25.94425,15.915828 25.90845,15.930528 C25.90445,15.932228 25.90045,15.933828 25.89665,15.935428 C25.03295,16.303828 13.76645,21.108128 13.74985,21.108128 C13.73265,21.108128 13.71545,21.108128 13.69815,21.091128 C13.66845,21.061728 13.69845,21.018628 13.72475,20.980728 C13.72965,20.973728 13.73445,20.966828 13.73875,20.960228 L18.22115,14.021128 C18.22375,14.017128 18.22635,14.013028 18.22895,14.008928 C18.25545,13.967028 18.28515,13.920328 18.33315,13.920328 C18.34845,13.922428 18.36355,13.924628 18.37835,13.926728 C18.48005,13.941428 18.57025,13.954428 18.66055,13.954428 C19.34065,13.954428 19.97045,13.622628 20.35125,13.057328 C20.36135,13.042328 20.37045,13.028928 20.38475,13.017728 C20.41195,12.996628 20.45155,13.007428 20.48325,13.020928 Z M14.23735,22.205528 L26.51755,16.969128 C26.51755,16.969128 26.53485,16.969228 26.55205,16.986228 C26.61935,17.052628 26.67605,17.098428 26.73055,17.139628 C26.73865,17.145728 26.74815,17.151228 26.75775,17.156828 C26.78295,17.171428 26.80855,17.186328 26.81025,17.213028 C26.81075,17.222228 26.80975,17.229228 26.80825,17.238328 L25.75565,23.699928 C25.75425,23.708128 25.75315,23.716828 25.75195,23.725628 C25.74525,23.776428 25.73775,23.833328 25.69055,23.833328 C25.11975,23.866528 24.61445,24.190728 24.31795,24.679928 C24.31635,24.682628 24.31475,24.685228 24.31315,24.687828 C24.29945,24.710928 24.28625,24.733028 24.26215,24.745128 C24.24185,24.755228 24.21475,24.750828 24.19265,24.746228 L14.40015,22.726028 C14.39085,22.724128 14.24765,22.207128 14.23735,22.205528 Z"
      ></path>

      <path
        fill="#FFF"
        d="M54.1523438,12.9804688 L54.2753906,15.1777344 C55.6816477,13.4785071 57.5273323,12.6289062 59.8125,12.6289062 C63.7734573,12.6289062 65.7890621,14.8964617 65.859375,19.4316406 L65.859375,32 L61.5878906,32 L61.5878906,19.6777344 C61.5878906,18.4706971 61.327151,17.5771513 60.8056641,16.9970703 C60.2841771,16.4169893 59.4316465,16.1269531 58.2480469,16.1269531 C56.525382,16.1269531 55.2421917,16.9062422 54.3984375,18.4648438 L54.3984375,32 L50.1269531,32 L50.1269531,12.9804688 L54.1523438,12.9804688 Z M78.5859375,32.3515625 C75.8788927,32.3515625 73.6845787,31.499032 72.0029297,29.7939453 C70.3212807,28.0888587 69.4804688,25.8183736 69.4804688,22.9824219 L69.4804688,22.4550781 C69.4804688,20.5566311 69.846676,18.860359 70.5791016,17.3662109 C71.3115271,15.8720628 72.3398371,14.7089885 73.6640625,13.8769531 C74.9882879,13.0449177 76.4648356,12.6289063 78.09375,12.6289063 C80.6836067,12.6289063 82.6845633,13.4550699 84.0966797,15.1074219 C85.5087961,16.7597739 86.2148438,19.0976411 86.2148438,22.1210938 L86.2148438,23.84375 L73.7871094,23.84375 C73.9160163,25.4140704 74.4404251,26.6562454 75.3603516,27.5703125 C76.280278,28.4843796 77.437493,28.9414062 78.8320312,28.9414062 C80.7890723,28.9414062 82.3828063,28.1503985 83.6132812,26.5683594 L85.9160156,28.765625 C85.1542931,29.9023494 84.1377017,30.7841766 82.8662109,31.4111328 C81.5947202,32.0380891 80.1679767,32.3515625 78.5859375,32.3515625 Z M78.0761719,16.0566406 C76.904291,16.0566406 75.9580114,16.4667928 75.2373047,17.2871094 C74.516598,18.107426 74.0566416,19.2499927 73.8574219,20.7148438 L81.9960938,20.7148438 L81.9960938,20.3984375 C81.9023433,18.9687429 81.5214877,17.887699 80.8535156,17.1552734 C80.1855435,16.4228479 79.2597715,16.0566406 78.0761719,16.0566406 Z M94.8808594,8.35742188 L94.8808594,12.9804688 L98.2382812,12.9804688 L98.2382812,16.1445312 L94.8808594,16.1445312 L94.8808594,26.7617188 C94.8808594,27.4882849 95.0244126,28.0126937 95.3115234,28.3349609 C95.5986342,28.6572282 96.1113244,28.8183594 96.8496094,28.8183594 C97.3417993,28.8183594 97.8398412,28.7597662 98.34375,28.6425781 L98.34375,31.9472656 C97.3710889,32.2167982 96.4335983,32.3515625 95.53125,32.3515625 C92.2499836,32.3515625 90.609375,30.5410337 90.609375,26.9199219 L90.609375,16.1445312 L87.4804688,16.1445312 L87.4804688,12.9804688 L90.609375,12.9804688 L90.609375,8.35742188 L94.8808594,8.35742188 Z M106.042969,32 L101.771484,32 L101.771484,5 L106.042969,5 L106.042969,32 Z M115.236328,32 L110.964844,32 L110.964844,12.9804688 L115.236328,12.9804688 L115.236328,32 Z M110.701172,8.04101562 C110.701172,7.38476234 110.909178,6.83984592 111.325195,6.40625 C111.741213,5.97265408 112.335934,5.75585938 113.109375,5.75585938 C113.882816,5.75585938 114.480467,5.97265408 114.902344,6.40625 C115.324221,6.83984592 115.535156,7.38476234 115.535156,8.04101562 C115.535156,8.6855501 115.324221,9.22167755 114.902344,9.64941406 C114.480467,10.0771506 113.882816,10.2910156 113.109375,10.2910156 C112.335934,10.2910156 111.741213,10.0771506 111.325195,9.64941406 C110.909178,9.22167755 110.701172,8.6855501 110.701172,8.04101562 Z M121.388672,32 L121.388672,16.1445312 L118.488281,16.1445312 L118.488281,12.9804688 L121.388672,12.9804688 L121.388672,11.2402344 C121.388672,9.13084883 121.974604,7.50195887 123.146484,6.35351562 C124.318365,5.20507238 125.958974,4.63085938 128.068359,4.63085938 C128.818363,4.63085938 129.61523,4.73632707 130.458984,4.94726562 L130.353516,8.28710938 C129.884763,8.19335891 129.339847,8.14648438 128.71875,8.14648438 C126.679677,8.14648438 125.660156,9.19530201 125.660156,11.2929688 L125.660156,12.9804688 L129.527344,12.9804688 L129.527344,16.1445312 L125.660156,16.1445312 L125.660156,32 L121.388672,32 Z M139.300781,25.8828125 L143.167969,12.9804688 L147.720703,12.9804688 L140.162109,34.8828125 C139.001947,38.0820472 137.033217,39.6816406 134.255859,39.6816406 C133.634763,39.6816406 132.949223,39.5761729 132.199219,39.3652344 L132.199219,36.0605469 L133.007812,36.1132812 C134.085943,36.1132812 134.897458,35.9169942 135.442383,35.5244141 C135.987307,35.131834 136.417967,34.4726609 136.734375,33.546875 L137.349609,31.9121094 L130.669922,12.9804688 L135.275391,12.9804688 L139.300781,25.8828125 Z"
      ></path>
    </svg>
  );
}

function SponsorGridCell({
  className,
  children,
}: React.PropsWithChildren<{ className: string }>) {
  return (
    <div
      className={cx(
        className,
        "relative rounded-lg before:content-[''] before:block before:pb-[100%]"
      )}
    >
      <div className="absolute top-0 left-0 w-full h-full p-8 2xl:p-10 flex items-center justify-center">
        {children}
      </div>
    </div>
  );
}

function LogoRemixHero(props: React.ComponentPropsWithoutRef<"svg">) {
  return (
    <svg
      width="496"
      height="320"
      viewBox="0 0 496 320"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <g filter="url(#filter_remix_i)">
        <path
          d="M346.978 73.5177V147.172H372.533V73.5177H346.978ZM346.82 66.5816H372.691V43.1311H346.82V66.5816Z"
          fill="#FFF7FF"
        />
      </g>
      <g filter="url(#filter_remix_r)">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M127.341 122.262C128.265 134.287 128.265 139.924 128.265 146.077H100.803C100.803 144.737 100.827 143.511 100.851 142.268C100.925 138.403 101.003 134.373 100.384 126.234C99.5676 114.319 94.5032 111.671 85.191 111.671H76.9408H42V89.992H86.498C98.2607 89.992 104.142 86.3667 104.142 76.7683C104.142 68.3284 98.2607 63.2137 86.498 63.2137H42V42H91.3991C118.028 42 131.261 54.7427 131.261 75.0979C131.261 90.323 121.949 100.252 109.37 101.907C119.989 104.059 126.197 110.182 127.341 122.262Z"
          fill="#E8F2FF"
        />
        <path
          d="M42 146.078V129.917H71.0365C75.8866 129.917 76.9397 133.561 76.9397 135.735V146.078H42Z"
          fill="#E8F2FF"
        />
      </g>
      <g filter="url(#filter_remix_x)">
        <path
          d="M459.266 73.6646H432.022L419.623 91.1349L407.551 73.6646H378.349L404.614 109.759L376.065 147.172H403.309L417.829 127.229L432.348 147.172H461.55L432.837 108.605L459.266 73.6646Z"
          fill="#FFF0F1"
        />
      </g>
      <g filter="url(#filter_remix_m)">
        <path
          d="M287.05 85.9615C283.949 77.359 277.255 71.4033 264.358 71.4033C253.42 71.4033 245.584 76.3664 241.666 84.4726V73.3885H215.219V147.172H241.666V110.942C241.666 99.858 244.768 92.5789 253.42 92.5789C261.42 92.5789 263.379 97.8728 263.379 107.964V147.172H289.826V110.942C289.826 99.858 292.764 92.5789 301.58 92.5789C309.579 92.5789 311.375 97.8728 311.375 107.964V147.172H337.822V100.851C337.822 85.4652 331.945 71.4033 311.865 71.4033C299.621 71.4033 290.968 77.6898 287.05 85.9615Z"
          fill="#FFFAEA"
        />
      </g>
      <g filter="url(#filter_remix_e)">
        <path
          d="M187.997 118.062C185.561 123.789 181.014 126.243 173.869 126.243C165.912 126.243 159.416 121.989 158.766 112.99H209.595V105.627C209.595 85.8298 196.766 69.1409 172.57 69.1409C149.997 69.1409 133.109 85.6661 133.109 108.736C133.109 131.97 149.673 146.041 172.894 146.041C192.057 146.041 205.373 136.715 209.108 120.026L187.997 118.062ZM159.091 100.228C160.066 93.3561 163.801 88.1204 172.245 88.1204C180.04 88.1204 184.262 93.6834 184.587 100.228H159.091Z"
          fill="#F1FFF0"
        />
      </g>
      <mask
        id="mask0_245_1109"
        style={{ maskType: "alpha" }}
        maskUnits="userSpaceOnUse"
        x="289"
        y="130"
        width="156"
        height="157"
      >
        <rect
          x="287.175"
          y="146.997"
          width="155"
          height="102"
          fill="url(#paint0_linear_245_1109)"
        />
      </mask>
      <g mask="url(#mask0_245_1109)">
        <path
          className="remix-logo-num-2"
          d="M401.084 156.53V151.329L415 129.362C416.035 127.72 416.981 126.191 417.837 124.777C418.737 123.363 419.458 121.88 419.998 120.329C420.584 118.732 420.877 116.907 420.877 114.854C420.877 112.299 420.471 110.292 419.661 108.832C418.85 107.372 417.432 106.642 415.405 106.642C413.694 106.642 412.365 107.121 411.42 108.079C410.474 109.037 409.821 110.292 409.461 111.843C409.1 113.394 408.92 115.06 408.92 116.839V118.687H401.692V116.77C401.692 113.44 402.12 110.589 402.976 108.216C403.876 105.798 405.295 103.928 407.231 102.605C409.213 101.282 411.825 100.62 415.067 100.62C419.481 100.62 422.768 101.898 424.93 104.452C427.091 106.962 428.172 110.452 428.172 114.923C428.172 117.295 427.879 119.371 427.294 121.15C426.753 122.929 426.033 124.595 425.132 126.146C424.232 127.697 423.241 129.294 422.16 130.936L409.596 150.371H426.889V156.53H401.084Z"
          fill="white"
        />
        <path
          d="M368.826 219.442V214.241L382.742 192.273C383.778 190.631 384.723 189.103 385.579 187.688C386.48 186.274 387.2 184.791 387.74 183.24C388.326 181.643 388.619 179.818 388.619 177.765C388.619 175.211 388.213 173.203 387.403 171.743C386.592 170.283 385.174 169.553 383.147 169.553C381.436 169.553 380.107 170.032 379.162 170.991C378.216 171.949 377.563 173.203 377.203 174.754C376.842 176.306 376.662 177.971 376.662 179.75V181.598H369.434V179.682C369.434 176.351 369.862 173.5 370.718 171.127C371.618 168.709 373.037 166.839 374.973 165.516C376.955 164.193 379.567 163.531 382.809 163.531C387.223 163.531 390.51 164.809 392.672 167.364C394.833 169.873 395.914 173.363 395.914 177.834C395.914 180.206 395.621 182.282 395.036 184.061C394.496 185.841 393.775 187.506 392.874 189.057C391.974 190.608 390.983 192.205 389.902 193.847L377.338 213.282H394.631V219.442H368.826Z"
          fill="white"
        />
        <path
          d="M348.656 220.057C345.549 220.057 342.982 219.35 340.955 217.936C338.974 216.522 337.488 214.583 336.497 212.119C335.551 209.655 335.078 206.85 335.078 203.702V179.818C335.078 176.579 335.551 173.751 336.497 171.333C337.443 168.869 338.906 166.953 340.888 165.584C342.914 164.216 345.504 163.531 348.656 163.531C351.808 163.531 354.375 164.216 356.357 165.584C358.338 166.953 359.802 168.869 360.747 171.333C361.693 173.751 362.166 176.579 362.166 179.818V203.702C362.166 206.895 361.671 209.724 360.68 212.188C359.734 214.651 358.27 216.59 356.289 218.004C354.308 219.373 351.763 220.057 348.656 220.057ZM348.656 214.035C350.367 214.035 351.651 213.533 352.506 212.53C353.407 211.526 354.015 210.249 354.33 208.697C354.69 207.101 354.87 205.458 354.87 203.77V179.75C354.87 177.971 354.713 176.306 354.398 174.754C354.082 173.158 353.474 171.88 352.574 170.922C351.718 169.964 350.412 169.485 348.656 169.485C346.9 169.485 345.571 169.964 344.67 170.922C343.77 171.88 343.162 173.158 342.847 174.754C342.531 176.306 342.374 177.971 342.374 179.75V203.77C342.374 205.458 342.531 207.101 342.847 208.697C343.207 210.249 343.837 211.526 344.738 212.53C345.684 213.533 346.99 214.035 348.656 214.035Z"
          fill="white"
        />
        <path
          d="M301.672 219.442V214.241L315.587 192.273C316.623 190.631 317.569 189.103 318.424 187.688C319.325 186.274 320.046 184.791 320.586 183.24C321.171 181.643 321.464 179.818 321.464 177.765C321.464 175.211 321.059 173.203 320.248 171.743C319.438 170.283 318.019 169.553 315.993 169.553C314.281 169.553 312.953 170.032 312.007 170.991C311.061 171.949 310.408 173.203 310.048 174.754C309.688 176.306 309.508 177.971 309.508 179.75V181.598H302.28V179.682C302.28 176.351 302.708 173.5 303.563 171.127C304.464 168.709 305.883 166.839 307.819 165.516C309.801 164.193 312.412 163.531 315.655 163.531C320.068 163.531 323.356 164.809 325.517 167.364C327.679 169.873 328.76 173.363 328.76 177.834C328.76 180.206 328.467 182.282 327.881 184.061C327.341 185.841 326.621 187.506 325.72 189.057C324.819 190.608 323.828 192.205 322.748 193.847L310.183 213.282H327.476V219.442H301.672Z"
          fill="white"
        />
        <path
          className="remix-logo-num-3"
          d="M413.907 220.114C410.856 220.114 408.313 219.543 406.278 218.401C404.244 217.26 402.718 215.616 401.701 213.469C400.684 211.323 400.175 208.788 400.175 205.865V204.016H407.527C407.527 204.198 407.527 204.404 407.527 204.632C407.527 204.815 407.527 205.02 407.527 205.249C407.573 206.893 407.758 208.377 408.082 209.701C408.451 211.026 409.076 212.076 409.954 212.853C410.879 213.629 412.196 214.017 413.907 214.017C415.71 214.017 417.074 213.606 417.999 212.784C418.923 211.916 419.548 210.706 419.871 209.153C420.195 207.601 420.357 205.82 420.357 203.81C420.357 200.887 419.802 198.513 418.692 196.686C417.629 194.813 415.733 193.786 413.005 193.603C412.867 193.557 412.682 193.535 412.451 193.535C412.266 193.535 412.104 193.535 411.965 193.535V186.205C412.104 186.205 412.266 186.205 412.451 186.205C412.636 186.205 412.797 186.205 412.936 186.205C415.571 186.113 417.467 185.428 418.623 184.15C419.779 182.871 420.357 180.747 420.357 177.779C420.357 175.267 419.918 173.258 419.039 171.75C418.207 170.243 416.519 169.49 413.976 169.49C411.433 169.49 409.746 170.335 408.914 172.024C408.082 173.669 407.619 175.792 407.527 178.395C407.527 178.578 407.527 178.784 407.527 179.012C407.527 179.195 407.527 179.377 407.527 179.56H400.175V177.71C400.175 174.742 400.684 172.207 401.701 170.106C402.718 168.006 404.244 166.384 406.278 165.243C408.359 164.101 410.925 163.53 413.976 163.53C417.074 163.53 419.64 164.101 421.674 165.243C423.709 166.384 425.234 168.028 426.252 170.175C427.269 172.276 427.777 174.81 427.777 177.779C427.777 181.113 427.038 183.784 425.558 185.794C424.125 187.803 422.183 189.173 419.733 189.904C421.443 190.406 422.877 191.274 424.032 192.507C425.234 193.74 426.159 195.316 426.806 197.234C427.454 199.106 427.777 201.298 427.777 203.81C427.777 207.098 427.315 209.976 426.39 212.442C425.466 214.862 423.986 216.757 421.952 218.127C419.918 219.452 417.236 220.114 413.907 220.114Z"
          fill="#D83BD2"
        />
      </g>
      <g filter="url(#filter_conf)">
        <path
          d="M75.1244 222.101C74.9668 224.303 75.0456 226.661 75.3607 229.177C75.6758 231.692 75.991 234.287 76.3061 236.96C76.4636 238.217 76.7788 239.868 77.2515 241.912C77.7242 243.799 78.2756 245.764 78.9059 247.808C79.6937 249.852 80.4815 251.739 81.2694 253.469C82.2147 255.198 83.1601 256.535 84.1055 257.478C85.2085 258.579 86.3114 259.129 87.4143 259.129C87.887 259.129 88.281 259.129 88.5961 259.129C89.0688 258.972 89.5415 258.815 90.0142 258.657C93.323 256.771 96.6318 253.94 99.9407 250.167C103.25 246.393 106.007 243.013 108.213 240.026C114.2 232.479 119.873 224.853 125.23 217.149C130.587 209.444 135.944 201.583 141.301 193.564C142.404 191.992 143.507 190.419 144.61 188.847C145.713 187.275 146.816 185.703 147.919 184.13C148.392 183.659 148.864 183.423 149.337 183.423C149.652 183.423 149.888 183.501 150.046 183.659C150.676 183.973 150.991 184.602 150.991 185.545C150.991 186.174 150.676 186.96 150.046 187.904C143.271 197.967 136.496 207.951 129.72 217.856C123.103 227.762 115.933 237.353 108.213 246.629C107.267 247.887 106.086 249.381 104.668 251.11C103.25 252.84 101.595 254.569 99.7043 256.299C97.9711 257.871 96.1592 259.208 94.2684 260.308C92.3776 261.409 90.5656 261.959 88.8324 261.959C85.8387 261.959 83.3177 260.937 81.2694 258.893C79.221 256.849 77.5666 254.412 76.3061 251.582C75.0456 248.752 74.1002 245.764 73.4699 242.62C72.8397 239.475 72.367 236.724 72.0519 234.365C70.9489 225.56 70.8701 216.362 71.8155 206.771C72.7609 198.438 74.2578 189.869 76.3061 181.064C78.3544 172.102 81.033 163.454 84.3418 155.121C87.8083 146.631 91.9837 138.612 96.8682 131.065C101.91 123.518 107.819 117.072 114.594 111.726C119.164 108.109 124.284 105.594 129.957 104.179H130.666C133.029 104.179 134.841 105.043 136.102 106.773C137.52 108.503 137.756 110.468 136.811 112.669C135.865 115.028 134.605 117.072 133.029 118.801C131.454 120.531 129.563 122.024 127.357 123.282C127.199 123.439 126.963 123.518 126.648 123.518C126.018 123.518 125.545 123.439 125.23 123.282C124.915 123.125 124.678 122.889 124.521 122.575C124.363 122.103 124.442 121.71 124.757 121.395C125.387 120.766 126.018 120.216 126.648 119.745C127.278 119.273 127.908 118.723 128.539 118.094C129.799 116.993 130.902 115.814 131.847 114.556C132.95 113.298 133.738 111.804 134.211 110.075C134.526 108.817 134.053 108.188 132.793 108.188C129.326 108.188 125.781 109.367 122.157 111.726C118.533 113.927 115.067 116.679 111.758 119.98C108.607 123.282 105.692 126.741 103.013 130.358C100.335 133.817 98.2863 136.883 96.8682 139.556C89.7778 151.348 84.3418 164.634 80.5603 179.413C76.9363 194.036 75.1244 208.265 75.1244 222.101Z"
          fill="white"
        />
        <path
          d="M206.162 197.102C205.374 197.731 204.744 198.36 204.271 198.989C203.798 199.617 203.404 200.325 203.089 201.111C201.356 205.042 199.623 208.973 197.89 212.903C196.156 216.677 194.423 220.529 192.69 224.46C191.902 226.661 191.035 228.784 190.09 230.828C189.145 232.872 188.042 234.916 186.781 236.96C185.836 238.217 184.575 238.846 183 238.846C181.424 238.846 180.085 238.06 178.982 236.488C178.194 235.073 177.8 233.422 177.8 231.535C177.485 228.862 177.485 226.347 177.8 223.988C178.273 221.472 178.824 218.878 179.455 216.205C183.709 197.023 191.351 179.178 202.38 162.668C202.853 161.882 203.325 161.096 203.798 160.31C204.271 159.367 204.665 158.502 204.98 157.716C205.768 156.143 205.374 155.357 203.798 155.357H203.325C201.12 155.514 198.52 156.222 195.526 157.48C192.532 158.738 189.539 160.231 186.545 161.961C183.709 163.533 180.873 165.184 178.036 166.914C175.358 168.643 173.152 170.137 171.419 171.395C171.104 171.709 170.867 171.945 170.71 172.102C170.71 172.259 170.631 172.417 170.473 172.574C170.631 173.36 170.946 173.91 171.419 174.225C171.891 174.539 172.285 174.854 172.6 175.168C176.067 178.156 177.17 182.008 175.909 186.725C175.437 188.611 174.412 191.284 172.837 194.743C171.261 198.045 169.37 201.347 167.165 204.649C164.959 207.793 162.595 210.545 160.074 212.903C157.553 215.262 155.19 216.441 152.984 216.441C151.566 216.441 150.226 216.048 148.966 215.262C147.863 214.318 147.154 213.061 146.839 211.488C146.524 209.602 146.524 207.793 146.839 206.064C147.154 204.806 147.627 203.155 148.257 201.111C148.887 198.91 149.754 196.787 150.857 194.743C151.96 192.542 153.22 190.734 154.638 189.319C156.056 187.747 157.553 186.96 159.129 186.96C160.232 186.96 161.02 187.668 161.492 189.083C161.65 189.397 161.65 189.791 161.492 190.262C161.335 190.734 161.098 190.97 160.783 190.97H159.838C158.577 190.97 157.632 191.363 157.002 192.149C156.371 192.935 155.741 193.721 155.111 194.507C152.747 198.595 151.172 202.919 150.384 207.479C150.226 208.737 150.148 209.602 150.148 210.073C150.305 210.545 150.778 211.646 151.566 213.375C153.614 212.746 155.662 211.41 157.711 209.366C159.917 207.164 161.886 204.727 163.619 202.055C165.51 199.382 167.165 196.709 168.583 194.036C170.001 191.206 171.025 188.926 171.655 187.196C172.443 184.838 172.837 182.715 172.837 180.828C172.522 177.369 170.946 175.64 168.11 175.64C166.849 175.64 165.589 176.033 164.328 176.819C163.068 177.605 162.044 178.391 161.256 179.178C157.789 181.693 154.323 184.445 150.857 187.432C150.069 188.061 149.36 188.375 148.73 188.375C148.257 188.375 147.627 188.14 146.839 187.668C145.421 186.882 145.106 185.938 145.893 184.838C146.366 184.209 146.76 183.659 147.075 183.187C147.548 182.558 148.099 182.008 148.73 181.536C152.038 178.234 155.82 175.64 160.074 173.753C161.335 173.439 162.438 172.967 163.383 172.338C164.328 171.709 165.353 171.002 166.455 170.215C168.504 168.8 171.025 167.071 174.019 165.027C177.17 162.826 180.479 160.782 183.945 158.895C187.412 156.851 190.799 155.2 194.108 153.942C197.574 152.527 200.568 151.819 203.089 151.819C204.822 151.662 206.24 152.213 207.343 153.47C208.446 154.571 208.84 155.986 208.525 157.716C208.368 158.816 208.052 159.838 207.58 160.782C207.265 161.725 206.871 162.59 206.398 163.376C205.295 165.263 204.192 167.149 203.089 169.036C202.144 170.766 201.12 172.574 200.017 174.461C195.447 182.008 191.745 189.869 188.908 198.045C186.072 206.064 183.866 214.397 182.291 223.045C181.503 226.818 181.345 230.356 181.818 233.658L182.527 234.365C183.157 234.365 183.472 234.208 183.472 233.894C184.103 233.107 184.654 232.243 185.127 231.299C185.6 230.356 185.993 229.491 186.309 228.705C188.199 224.617 190.011 220.608 191.745 216.677C193.635 212.589 195.447 208.501 197.18 204.413C198.126 202.369 199.071 200.404 200.017 198.517C201.12 196.473 202.223 194.507 203.325 192.621C203.798 191.835 204.271 191.127 204.744 190.498C205.216 189.869 205.768 189.24 206.398 188.611C207.028 187.825 207.737 187.432 208.525 187.432C209.313 187.432 210.022 187.982 210.652 189.083C211.282 190.026 211.44 191.284 211.125 192.857C210.967 194.429 210.81 196.001 210.652 197.573C210.495 199.146 210.337 200.718 210.18 202.29C210.022 203.705 210.022 205.199 210.18 206.771C210.18 207.558 210.495 208.029 211.125 208.186C211.755 208.344 212.385 208.422 213.016 208.422C214.276 208.108 215.537 207.558 216.797 206.771C218.215 205.828 219.633 204.806 221.051 203.705C222.47 202.448 223.73 201.268 224.833 200.168C226.093 198.91 227.118 197.888 227.905 197.102C229.639 195.372 231.293 193.564 232.869 191.677C234.444 189.791 236.099 187.904 237.832 186.017C238.462 185.074 239.25 184.287 240.195 183.659C240.353 183.501 240.589 183.501 240.905 183.659C241.22 183.659 241.456 183.737 241.614 183.894C241.929 184.209 242.165 184.523 242.323 184.838C242.638 185.152 242.716 185.467 242.559 185.781L241.85 187.196C240.432 188.926 238.699 190.97 236.65 193.328C234.76 195.687 232.711 198.045 230.505 200.404C228.299 202.605 226.015 204.727 223.651 206.771C221.445 208.658 219.239 210.073 217.034 211.017C215.931 211.488 214.906 211.724 213.961 211.724C211.44 211.724 209.628 210.938 208.525 209.366C207.422 207.793 206.713 205.907 206.398 203.705C206.398 202.605 206.398 201.583 206.398 200.639C206.556 199.539 206.477 198.36 206.162 197.102Z"
          fill="white"
        />
        <path
          d="M286.211 113.377C286.053 116.207 285.502 118.723 284.557 120.924C282.823 125.641 280.617 130.515 277.939 135.546C275.26 140.578 272.345 145.609 269.194 150.64C266.2 155.514 263.049 160.31 259.74 165.027C256.431 169.586 253.28 173.832 250.286 177.762C248.553 179.964 247.135 182.244 246.032 184.602C244.929 186.96 244.22 189.476 243.905 192.149C243.59 195.294 243.196 198.438 242.723 201.583C242.251 204.57 241.778 207.636 241.305 210.781C241.148 211.41 241.069 212.039 241.069 212.668C241.226 213.296 241.305 213.925 241.305 214.554C241.305 214.869 241.463 215.105 241.778 215.262C242.093 215.419 242.329 215.419 242.487 215.262C243.117 214.79 243.669 214.318 244.141 213.847C244.772 213.375 245.323 212.903 245.796 212.432C250.208 208.186 254.619 204.02 259.031 199.932C263.443 195.844 268.012 191.913 272.739 188.14C273.369 187.668 274 187.196 274.63 186.725C275.26 186.253 275.969 185.781 276.757 185.309C277.072 184.995 277.702 184.681 278.648 184.366H279.357C279.987 184.366 280.539 184.681 281.011 185.309C281.326 186.096 281.09 186.882 280.302 187.668C273.685 192.699 267.382 197.967 261.395 203.47C255.407 208.815 249.42 214.397 243.432 220.215C241.226 222.416 240.202 224.853 240.36 227.526C240.517 229.727 240.517 231.85 240.36 233.894C240.36 235.78 240.439 237.746 240.596 239.79C240.596 243.721 241.305 247.494 242.723 251.11C243.984 254.727 244.85 258.422 245.323 262.195C245.796 265.969 246.19 269.742 246.505 273.516C246.505 274.773 246.426 275.717 246.268 276.346C246.268 277.446 245.481 277.997 243.905 277.997C243.117 277.997 242.487 277.761 242.014 277.289C240.439 272.729 239.336 268.17 238.705 263.61C238.075 258.893 237.524 254.176 237.051 249.459C237.051 246.315 236.027 243.642 233.978 241.441C231.93 239.239 229.33 238.139 226.179 238.139C225.549 237.982 224.919 237.903 224.288 237.903C223.658 237.746 223.185 237.353 222.87 236.724C222.555 235.938 222.634 235.309 223.107 234.837C223.422 234.365 223.816 233.894 224.288 233.422C225.864 231.85 227.361 230.356 228.779 228.941C230.197 227.369 231.773 225.875 233.506 224.46C235.397 222.73 236.499 220.529 236.815 217.856C236.972 214.083 237.209 210.309 237.524 206.536C237.996 202.762 238.627 198.989 239.414 195.215C239.73 193.171 239.178 191.756 237.76 190.97C236.972 190.341 236.893 189.712 237.524 189.083C239.414 187.353 240.675 185.388 241.305 183.187C242.093 180.828 242.802 178.47 243.432 176.112C244.693 171.08 246.426 165.498 248.632 159.367C250.838 153.077 253.359 146.867 256.195 140.735C259.189 134.603 262.419 128.785 265.885 123.282C269.509 117.779 273.369 113.298 277.466 109.839C277.781 109.525 278.412 109.131 279.357 108.66C280.46 108.031 281.326 107.716 281.957 107.716C283.375 107.716 284.478 108.503 285.266 110.075C285.581 110.704 285.738 111.333 285.738 111.962C285.896 112.591 286.053 113.062 286.211 113.377ZM282.902 114.084C282.745 113.77 282.666 113.534 282.666 113.377C282.666 113.062 282.587 112.748 282.429 112.433C282.272 112.276 282.035 112.197 281.72 112.197C281.405 112.197 280.933 112.355 280.302 112.669C279.672 113.298 279.042 113.927 278.412 114.556C277.781 115.028 277.072 115.657 276.284 116.443C270.139 123.361 264.94 131.38 260.686 140.499C256.589 149.461 253.122 158.187 250.286 166.678C249.971 167.621 249.656 168.879 249.341 170.451L250.05 171.159C250.208 171.002 250.365 170.923 250.523 170.923C250.838 170.608 251.074 170.294 251.232 169.98C251.547 169.508 251.862 169.115 252.177 168.8C257.534 161.096 262.813 153.235 268.012 145.216C273.212 137.04 277.545 128.549 281.011 119.745C281.326 118.801 281.642 117.858 281.957 116.914C282.272 115.971 282.587 115.028 282.902 114.084ZM228.542 235.545C229.645 236.016 230.67 236.567 231.615 237.195C232.56 237.667 233.506 238.139 234.451 238.611C234.766 238.768 234.924 238.846 234.924 238.846C235.712 238.846 236.106 238.296 236.106 237.195V230.12C236.106 229.334 235.79 228.941 235.16 228.941C234.687 228.941 234.372 229.019 234.215 229.177C233.112 230.12 232.088 231.063 231.142 232.007C230.039 232.95 229.173 234.129 228.542 235.545Z"
          fill="white"
        />
      </g>
      <defs>
        <animate
          xlinkHref="#filter_remix_r_blur"
          attributeType="XML"
          attributeName="stdDeviation"
          from="0"
          to="14"
          dur="3s"
          repeatCount="1"
          fill="freeze"
        />
        <animate
          xlinkHref="#filter_remix_e_blur"
          attributeType="XML"
          attributeName="stdDeviation"
          from="0"
          to="14"
          dur="3s"
          repeatCount="1"
          fill="freeze"
        />
        <animate
          xlinkHref="#filter_remix_m_blur"
          attributeType="XML"
          attributeName="stdDeviation"
          from="0"
          to="14"
          dur="3s"
          repeatCount="1"
          fill="freeze"
        />
        <animate
          xlinkHref="#filter_remix_i_blur"
          attributeType="XML"
          attributeName="stdDeviation"
          from="0"
          to="14"
          dur="3s"
          repeatCount="1"
          fill="freeze"
        />
        <animate
          xlinkHref="#filter_remix_x_blur"
          attributeType="XML"
          attributeName="stdDeviation"
          from="0"
          to="14"
          dur="3s"
          repeatCount="1"
          fill="freeze"
        />
        <filter
          id="filter_remix_i"
          x="318.82"
          y="15.1311"
          width="81.8704"
          height="160.041"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
          opacity="1"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur id="filter_remix_i_blur" stdDeviation="0" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.847059 0 0 0 0 0.231373 0 0 0 0 0.823529 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_245_1109"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="14" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.847059 0 0 0 0 0.231373 0 0 0 0 0.823529 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="effect1_dropShadow_245_1109"
            result="effect2_dropShadow_245_1109"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect2_dropShadow_245_1109"
            result="shape"
          />
        </filter>
        <filter
          id="filter_remix_r"
          x="0"
          y="0"
          width="173.261"
          height="188.078"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
          opacity="0"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="21" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.223529 0 0 0 0 0.572549 0 0 0 0 1 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_245_1109"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur id="filter_remix_r_blur" stdDeviation="0" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.223529 0 0 0 0 0.572549 0 0 0 0 1 0 0 0 0.9 0"
          />
          <feBlend
            mode="normal"
            in2="effect1_dropShadow_245_1109"
            result="effect2_dropShadow_245_1109"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect2_dropShadow_245_1109"
            result="shape"
          />
        </filter>
        <filter
          id="filter_remix_x"
          x="344.065"
          y="41.6646"
          width="149.485"
          height="137.507"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur id="filter_remix_x_blur" stdDeviation="0" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.960784 0 0 0 0 0.2 0 0 0 0 0.258824 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_245_1109"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="16" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.960784 0 0 0 0 0.2 0 0 0 0 0.258824 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="effect1_dropShadow_245_1109"
            result="effect2_dropShadow_245_1109"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect2_dropShadow_245_1109"
            result="shape"
          />
        </filter>
        <filter
          id="filter_remix_m"
          x="187.219"
          y="43.4033"
          width="178.603"
          height="131.769"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur id="filter_remix_m_blur" stdDeviation="0" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.996078 0 0 0 0 0.8 0 0 0 0 0.105882 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_245_1109"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="14" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.996078 0 0 0 0 0.8 0 0 0 0 0.105882 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="effect1_dropShadow_245_1109"
            result="effect2_dropShadow_245_1109"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect2_dropShadow_245_1109"
            result="shape"
          />
        </filter>
        <filter
          id="filter_remix_e"
          x="105.109"
          y="41.1409"
          width="132.486"
          height="132.9"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur id="filter_remix_e_blur" stdDeviation="0" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.419608 0 0 0 0 0.85098 0 0 0 0 0.407843 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_245_1109"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="14" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.419608 0 0 0 0 0.85098 0 0 0 0 0.407843 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="effect1_dropShadow_245_1109"
            result="effect2_dropShadow_245_1109"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect2_dropShadow_245_1109"
            result="shape"
          />
        </filter>
        <filter
          id="filter_conf"
          x="29.161"
          y="62.1787"
          width="299.05"
          height="257.818"
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB"
        >
          <feFlood floodOpacity="0" result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="21" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.223529 0 0 0 0 0.572549 0 0 0 0 1 0 0 0 1 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_245_1109"
          />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset />
          <feGaussianBlur stdDeviation="14" />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0.223529 0 0 0 0 0.572549 0 0 0 0 1 0 0 0 0.9 0"
          />
          <feBlend
            mode="normal"
            in2="effect1_dropShadow_245_1109"
            result="effect2_dropShadow_245_1109"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect2_dropShadow_245_1109"
            result="shape"
          />
        </filter>
        <linearGradient
          id="paint0_linear_245_1109"
          x1="364.675"
          y1="146.997"
          x2="364.675"
          y2="248.997"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopOpacity="0" />
          <stop offset="0.166667" />
          <stop offset="0.776042" />
          <stop offset="1" stopOpacity="0" />
        </linearGradient>
      </defs>
    </svg>
  );
}

function Speakers() {
  let { speakers } = useLoaderData<LoaderData>();
  let mc = speakers.find((s) => s.type === "emcee");
  let talkSpeakers = speakers.filter((s) => s.type !== "emcee");
  return (
    <section id="speakers" className="py-20">
      <div className="relative container">
        <h2 className="font-display text-m-h1 md:text-d-h1 mb-6 md:mb-8 font-semibold">
          Speakers
        </h2>
      </div>
      <div className="lg:container">
        <ScrollX className="gap-5 lg:grid lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 lg:auto-rows-fr">
          <div className="w-6 md:w-8 shrink-0 grow-0 snap-start -mr-5 lg:hidden"></div>
          {talkSpeakers.map((speaker) => (
            <SpeakerDisplay
              speaker={speaker}
              key={speaker.name}
              className="w-[36%] min-w-[116px] lg:w-auto lg:min-w-0 snap-start shrink-0 grow-0 origin-center scale-100 transition-transform duration-300 ease-out relative"
            />
          ))}
        </ScrollX>
        {mc ? (
          <div id="mc">
            <h2 className="mt-24 mb-6 md:mb-8 uppercase font-semibold text-center">
              Master of Ceremonies
            </h2>
            <div className="flex justify-center m-auto">
              <SpeakerDisplay speaker={mc} className="basis-72" />
            </div>
          </div>
        ) : null}
      </div>
    </section>
  );
}

function SpeakerDisplay({
  speaker,
  className = "",
}: {
  speaker: Omit<Speaker, "bio">;
  className?: string;
}) {
  return (
    <Link
      to={`speakers/${speaker.slug}`}
      className={`__speaker-link flex items-start h-full w-full ${className}`}
      aria-label={`${speaker.name}, ${speaker.title}`}
      prefetch="intent"
    >
      <div className="w-full max-w-xs sm:max-w-none">
        <div className="__speaker-img rounded-md overflow-hidden aspect-w-1 aspect-h-1 bg-black">
          <img src={speaker.imgSrc} alt={speaker.name} title={speaker.name} />
        </div>
        <div className="mt-4">
          <h3>{speaker.name}</h3>
          <p className="text-m-p-sm">{speaker.title}</p>
          <p className="text-m-p-sm font-semibold uppercase mt-2">
            {speaker.linkText}
          </p>
        </div>
      </div>
    </Link>
  );
}

function Sponsors() {
  const { sponsors } = useLoaderData<LoaderData>();
  return (
    <section id="sponsors" className="py-20 __section-sponsors">
      <div className="relative container">
        <h2 className="font-display text-m-h1 md:text-d-h1 mb-6 md:mb-8 font-semibold">
          Sponsors
        </h2>
      </div>
      <div className="lg:container">
        <div></div>
        <div className="container lg:mx-0 lg:px-0">
          {sponsors.premier ? (
            <a href={sponsors.premier.link}>
              <img
                src={sponsors.premier.imgSrc}
                alt={sponsors.premier.name}
                className="max-w-full max-h-full p-12"
              />
            </a>
          ) : (
            <div className="bg-blue-brand" />
          )}
        </div>

        {sponsors.gold.length > 0 ? (
          <ScrollX className="gap-5 lg:grid lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 lg:auto-rows-fr"></ScrollX>
        ) : null}
      </div>
    </section>
  );
}

function SponsorsList({
  sponsors,
  level,
}: {
  sponsors: Array<Sponsor>;
  level: Sponsor["level"];
}) {
  const size = {
    premier: "",
    gold: "w-[250px] h-[250px]",
    silver: "w-[200px] h-[200px]",
    community: "w-[150px] h-[150px]",
  }[level];

  const ulClassName = {
    premier: "",
    gold: "max-w-[36rem] gap-8 md:gap-12 lg:gap-14",
    silver: "max-w-[46rem] gap-6 md:gap-10 lg:gap-12",
    community: "max-w-[46rem] gap-4 md:gap-8 lg:gap-10",
  }[level];

  return (
    <div>
      <ul
        className={`${ulClassName} m-auto flex flex-wrap list-none items-center justify-center`}
      >
        {sponsors.map((sponsor) => (
          <li key={sponsor.name} className={`${size}`}>
            <div className="border-2 border-200 w-full h-full bg-white">
              <a
                href={sponsor.link}
                className="h-full w-full flex items-center justify-center"
              >
                <img
                  src={sponsor.imgSrc}
                  alt={sponsor.name}
                  title={sponsor.name}
                  className="max-w-full max-h-full p-3"
                />
              </a>
            </div>
          </li>
        ))}
      </ul>
    </div>
  );
}

function ScrollX({
  className = "",
  children,
}: React.PropsWithChildren<{
  className?: string;
}>) {
  return (
    <div
      className={cx(
        className,
        "flex overflow-x-auto snap-x snap-mandatory scroll-smooth lg:snap-none"
      )}
    >
      {children}
    </div>
  );
}
